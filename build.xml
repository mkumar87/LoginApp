<?xml version="1.0"?>
<project name="LoginApp" default="test" basedir=".">
    <description>LoginApp Project</description>
    <!-- Global vars -->
    <property environment="env" />
    <property name="project.name" value="LoginApp" />
    <property name="LoginApp.location" value="." />
    <property name="archive.name" value="${project.name}.war" />
    <property name="staging.dir" value="${LoginApp.location}/.staging" />

    <path id="project.classpath">
        <pathelement location="build/classes" />
       <!-- <fileset dir="WebContent/WEB-INF/lib/">
            <include name="*.jar" />
        </fileset> -->
        <fileset dir="common/lib">
            <include name="*.jar" />
        </fileset>
    </path>

    <!-- TaskDefs -->
   <!--  <path id="buildtimestamp.classpath">
        <pathelement location="build_libs/timeStamper.jar" />
    </path>

    <path id="yui-compressor.classpath">
        <pathelement location="build_libs/yui-compressor-ant-task-0.5.jar" />
        <pathelement location="build_libs/yuicompressor-2.4.7.jar" />
    </path>

    <taskdef name="yui-compressor" classname="net.noha.tools.ant.yuicompressor.tasks.YuiCompressorTask">
        <classpath refid="yui-compressor.classpath" />
    </taskdef> -->

    <!-- Targets -->

	
    <target name="init">
        <property name="init.executed" value="true" />
        <mkdir dir="build/classes" />
    </target>

    <target name="compile">
        <echo message="Compiling Build file" />
        <javac destdir="build/classes" includeantruntime="false" nowarn="on" includes="**/*.java" debug="true">
            <src path="src" />
            <classpath refid="project.classpath" />
        </javac>
    </target>
    	
    <target name="compress">
        <yui-compressor warn="false" excludes="WebContent/Spec" fromDir="WebContent" toDir="WebContent" jsSuffix=".min.js" cssSuffix=".min.css">
        	<exclude name="js/**/*spec*.js"/>
        	<include name="js/**/*.js" />
            <exclude name="js/**/*.min.js"/>
            <include name="css/**/*.css" />
            <exclude name="css/**/*.min.css"/>
        </yui-compressor>            
    </target>
	
    <target name="stage" depends="init, compile" description=" copies all of project's resources and build artifacts into a form that's ready for archive creation; staging directory can be overridden via the &quot;staging.dir&quot; property">
        <delete dir="${staging.dir}" quiet="true" />
        <mkdir dir="${staging.dir}" />
        <copy todir="${staging.dir}">
            <fileset dir="WebContent">
                <include name="**" />
            </fileset>
        </copy>
        <copy todir="${staging.dir}/WEB-INF/">
            <fileset dir="build">
                <include name="**" />
            </fileset>
        </copy>
        <copy todir="${staging.dir}/WEB-INF/classes">
            <fileset dir="properties">
                <include name="**" />
            </fileset>
        </copy>
        <buildtimestamp file="${staging.dir}/WEB-INF/jsp/_build_.jspf" />
        <buildinfo file="${staging.dir}/WEB-INF/jsp/_build_info_.jspf" tagFile="${LoginApp.location}/CVS/Tag"/>
        <!-- <manifestWriter file="${staging.dir}/META-INF/MANIFEST.MF"/> -->
    </target>

    <target name="test" depends="clean,stage" description=" creates an archive containing all projects's resources and build artifacts; archive name and location can be overridden via the &quot;archive.path&quot; property">
        <mkdir dir="dist" />
        <zip destfile="dist/${archive.name}" encoding="UTF8" whenempty="create">
            <fileset dir="${staging.dir}" />
        </zip>
    </target>
	
   
    <target name="clean">
        <delete dir="${staging.dir}" quiet="true" />
        <delete dir="build/classes" />
        <delete file="${project.name}.war" />
    </target>
	
</project>
